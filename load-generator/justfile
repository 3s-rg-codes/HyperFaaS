default:
	@just --list


export:
	uv run ../benchmarks/import.py --csv test_results.csv --db ../benchmarks/metrics.db

# run a seeded load generation with parameters
run time="2m" seed="12345" address="localhost:50050":
	k6 run \
	--quiet \
	--out csv=test_results.csv \
	-e WORKLOAD_SEED={{seed}} \
	-e PERSIST_GENERATION=true \
	-e TOTAL_TEST_DURATION={{time}} \
	-e FUNCTION_TIMEOUT_SECONDS=30 \
	-e MIN_PREALLOCATED_VUS=10 \
	-e MAX_PREALLOCATED_VUS=50 \
	-e MIN_MAX_VUS=1000 \
	-e MAX_MAX_VUS=1050 \
	-e RAMPING_START_RATE_MIN=1 \
	-e RAMPING_START_RATE_MAX=50 \
	-e BFS_MIN_SCENARIOS=8 \
	-e BFS_MAX_SCENARIOS=10 \
	-e BFS_CONSTANT_SCENARIOS_RATIO=0.6 \
	-e BFS_CONSTANT_RATE_MIN=350 \
	-e BFS_CONSTANT_RATE_MAX=450 \
	-e BFS_BURST_TARGET_RATE_MIN=300 \
	-e BFS_BURST_TARGET_RATE_MAX=350 \
	-e ECHO_MIN_SCENARIOS=12 \
	-e ECHO_MAX_SCENARIOS=16 \
	-e ECHO_CONSTANT_SCENARIOS_RATIO=0.5 \
	-e ECHO_CONSTANT_RATE_MIN=1100 \
	-e ECHO_CONSTANT_RATE_MAX=1500 \
	-e ECHO_BURST_TARGET_RATE_MIN=2000 \
	-e ECHO_BURST_TARGET_RATE_MAX=3000 \
	-e THUMBNAILER_MIN_SCENARIOS=12 \
	-e THUMBNAILER_MAX_SCENARIOS=15 \
	-e THUMBNAILER_CONSTANT_SCENARIOS_RATIO=0.8 \
	-e THUMBNAILER_CONSTANT_RATE_MIN=450 \
	-e THUMBNAILER_CONSTANT_RATE_MAX=550 \
	-e THUMBNAILER_BURST_TARGET_RATE_MIN=600 \
	-e THUMBNAILER_BURST_TARGET_RATE_MAX=1000 \
	-e ADDRESS={{address}} \
	script.js 1> generated_scenarios.json 2> stderr_output.txt && \
	jq --arg bfs "$(grep -o "bfsFunctionId= [^\"]*" stderr_output.txt | sed 's/functionId= //' | awk '{print $2}')" \
	   --arg echo "$(grep -o "echoFunctionId= [^\"]*" stderr_output.txt | sed 's/functionId= //' | awk '{print $2}')" \
	   --arg thumb "$(grep -o "thumbnailerFunctionId= [^\"]*" stderr_output.txt | sed 's/functionId= //' | awk '{print $2}')" \
	   '.metadata += {bfsFunctionId: $bfs, echoFunctionId: $echo, thumbnailerFunctionId: $thumb}' \
	   generated_scenarios.json > tmp.json && mv tmp.json generated_scenarios.json && rm stderr_output.txt

# dont judge me for the monster above... there is no way to get data out of the setup function in k6
# so we have to do this.
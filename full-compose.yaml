services:
  worker-A-1:
    image: hyperfaas-worker-a-1
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - function-logs:/root/functions/logs
    ports:
      - "50051:50051"
    networks:
      - hyperfaas-network
    command: ["./app", "-address=0.0.0.0:50051", "-runtime=${RUNTIME_TYPE}", "-log-level=${LOG_LEVEL}", "-log-format=text", "--auto-remove=true", "-containerized=true", "-database-type=http", "-update-buffer-size=100000", "-service-name=worker-a-1"]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50051"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      database:
        condition: service_healthy
  worker-A-2:
    image: hyperfaas-worker-a-2
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - function-logs:/root/functions/logs
    ports:
      - "50041:50041"
    networks:
      - hyperfaas-network
    command: ["./app", "-address=0.0.0.0:50041", "-runtime=${RUNTIME_TYPE}", "-log-level=${LOG_LEVEL}", "-log-format=text", "--auto-remove=true", "-containerized=true", "-database-type=http", "-update-buffer-size=100000", "-service-name=worker-a-2"]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50041"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      database:
        condition: service_healthy
  worker-B-1:
    image: hyperfaas-worker-b-1
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - function-logs:/root/functions/logs
    ports:
      - "50031:50031"
    networks:
      - hyperfaas-network
    command: ["./app", "-address=0.0.0.0:50031", "-runtime=${RUNTIME_TYPE}", "-log-level=${LOG_LEVEL}", "-log-format=text", "--auto-remove=true", "-containerized=true", "-database-type=http", "-update-buffer-size=100000", "-service-name=worker-b-1"]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50031"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      database:
        condition: service_healthy
  worker-B-2:
    image: hyperfaas-worker-b-2
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - function-logs:/root/functions/logs
    ports:
      - "50021:50021"
    networks:
      - hyperfaas-network
    command: ["./app", "-address=0.0.0.0:50021", "-runtime=${RUNTIME_TYPE}", "-log-level=${LOG_LEVEL}", "-log-format=text", "--auto-remove=true", "-containerized=true", "-database-type=http", "-update-buffer-size=100000", "-service-name=worker-b-2"]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50021"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      database:
        condition: service_healthy
  leaf-A:
    image: hyperfaas-leaf-a
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: leaf
    ports:
      - "50050:50050"
    networks:
      - hyperfaas-network
    command: [
      "./app",
      "-address=0.0.0.0:50050",
      "-log-level=${LOG_LEVEL}",
      "-log-format=text",
      "-worker-addr=worker-A-1:50051",
      "-worker-addr=worker-A-2:50041",
      "-scale-to-zero-after=10s",
      "-max-instances-per-worker=4"
    ]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50050"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      worker-A-1:
        condition: service_healthy
      worker-A-2:
        condition: service_healthy
      database:
        condition: service_healthy
  leaf-B:
    image: hyperfaas-leaf-b
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: leaf
    ports:
      - "50040:50040"
    networks:
      - hyperfaas-network
    command: [
      "./app",
      "-address=0.0.0.0:50040",
      "-log-level=${LOG_LEVEL}",
      "-log-format=text",
      "-worker-addr=worker-B-1:50031",
      "-worker-addr=worker-B-2:50021",
      "-scale-to-zero-after=10s",
      "-max-instances-per-worker=4"
    ]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50040"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      worker-B-1:
        condition: service_healthy
      worker-B-2:
        condition: service_healthy
      database:
        condition: service_healthy
  lb:
    image: hyperfaas-lb
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: lb
    ports:
      - "50052:50052"
    networks:
      - hyperfaas-network
    command: ["./app", "--log-level=${LOG_LEVEL}", "--log-format=text", "--leaf-addr=leaf-A:50050", "--leaf-addr=leaf-B:50040", "--strategy=hyperfaas_round_robin", "--database-address=http://database:8999"]
    depends_on:
      leaf-A:
        condition: service_healthy
      leaf-B:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50052"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
  database:
    image: hyperfaas-database
    build:
      context: .
      dockerfile: Dockerfile
      args:
        COMPONENT: database
    ports:
      - "8999:8999"
    networks:
      - hyperfaas-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8999"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
volumes:
  function-logs:
    name: function-logs
networks:
  hyperfaas-network:
    name: hyperfaas-network
    driver: bridge

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: common/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Error) Reset() {
	*x = Error{}
	mi := &file_common_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           string                 `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_common_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{1}
}

func (x *Image) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type CallRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the function to invoke.
	FunctionId string `protobuf:"bytes,1,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	// The data to pass to the function.
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallRequest) Reset() {
	*x = CallRequest{}
	mi := &file_common_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRequest) ProtoMessage() {}

func (x *CallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRequest.ProtoReflect.Descriptor instead.
func (*CallRequest) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{2}
}

func (x *CallRequest) GetFunctionId() string {
	if x != nil {
		return x.FunctionId
	}
	return ""
}

func (x *CallRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CallResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The result data from the function call.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// An error that happened in the function (the user code), if any.
	Error         *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallResponse) Reset() {
	*x = CallResponse{}
	mi := &file_common_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallResponse) ProtoMessage() {}

func (x *CallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallResponse.ProtoReflect.Descriptor instead.
func (*CallResponse) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{3}
}

func (x *CallResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CallResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// container memory limit in bytes
	Memory         int64      `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu            *CPUConfig `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Timeout        int32      `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	MaxConcurrency int32      `protobuf:"varint,4,opt,name=max_concurrency,json=maxConcurrency,proto3" json:"max_concurrency,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_common_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{4}
}

func (x *Config) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Config) GetCpu() *CPUConfig {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *Config) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Config) GetMaxConcurrency() int32 {
	if x != nil {
		return x.MaxConcurrency
	}
	return 0
}

// Container CPU configuration.
// If the host has 2 CPUs and the container should only use 1 CPU,
// set period to 100000 and quota to 50000.
type CPUConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU CFS (Completely Fair Scheduler) period
	Period int64 `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	// CPU CFS (Completely Fair Scheduler) quota
	Quota         int64 `protobuf:"varint,2,opt,name=quota,proto3" json:"quota,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUConfig) Reset() {
	*x = CPUConfig{}
	mi := &file_common_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUConfig) ProtoMessage() {}

func (x *CPUConfig) ProtoReflect() protoreflect.Message {
	mi := &file_common_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUConfig.ProtoReflect.Descriptor instead.
func (*CPUConfig) Descriptor() ([]byte, []int) {
	return file_common_common_proto_rawDescGZIP(), []int{5}
}

func (x *CPUConfig) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *CPUConfig) GetQuota() int64 {
	if x != nil {
		return x.Quota
	}
	return 0
}

var File_common_common_proto protoreflect.FileDescriptor

const file_common_common_proto_rawDesc = "" +
	"\n" +
	"\x13common/common.proto\x12\x06common\"!\n" +
	"\x05Error\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\x19\n" +
	"\x05Image\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\tR\x03tag\"B\n" +
	"\vCallRequest\x12\x1f\n" +
	"\vfunction_id\x18\x01 \x01(\tR\n" +
	"functionId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"G\n" +
	"\fCallResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12#\n" +
	"\x05error\x18\x02 \x01(\v2\r.common.ErrorR\x05error\"\x88\x01\n" +
	"\x06Config\x12\x16\n" +
	"\x06memory\x18\x01 \x01(\x03R\x06memory\x12#\n" +
	"\x03cpu\x18\x02 \x01(\v2\x11.common.CPUConfigR\x03cpu\x12\x18\n" +
	"\atimeout\x18\x03 \x01(\x05R\atimeout\x12'\n" +
	"\x0fmax_concurrency\x18\x04 \x01(\x05R\x0emaxConcurrency\"9\n" +
	"\tCPUConfig\x12\x16\n" +
	"\x06period\x18\x01 \x01(\x03R\x06period\x12\x14\n" +
	"\x05quota\x18\x02 \x01(\x03R\x05quotaB/Z-github.com/3s-rg-codes/HyperFaaS/proto/commonb\x06proto3"

var (
	file_common_common_proto_rawDescOnce sync.Once
	file_common_common_proto_rawDescData []byte
)

func file_common_common_proto_rawDescGZIP() []byte {
	file_common_common_proto_rawDescOnce.Do(func() {
		file_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_common_proto_rawDesc), len(file_common_common_proto_rawDesc)))
	})
	return file_common_common_proto_rawDescData
}

var file_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_common_common_proto_goTypes = []any{
	(*Error)(nil),        // 0: common.Error
	(*Image)(nil),        // 1: common.Image
	(*CallRequest)(nil),  // 2: common.CallRequest
	(*CallResponse)(nil), // 3: common.CallResponse
	(*Config)(nil),       // 4: common.Config
	(*CPUConfig)(nil),    // 5: common.CPUConfig
}
var file_common_common_proto_depIdxs = []int32{
	0, // 0: common.CallResponse.error:type_name -> common.Error
	5, // 1: common.Config.cpu:type_name -> common.CPUConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_common_proto_init() }
func file_common_common_proto_init() {
	if File_common_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_common_proto_rawDesc), len(file_common_common_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_common_proto_goTypes,
		DependencyIndexes: file_common_common_proto_depIdxs,
		MessageInfos:      file_common_common_proto_msgTypes,
	}.Build()
	File_common_common_proto = out.File
	file_common_common_proto_goTypes = nil
	file_common_common_proto_depIdxs = nil
}

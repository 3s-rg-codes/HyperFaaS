services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.15
    command:
      - /usr/local/bin/etcd
      - --name=etcd
      - --data-dir=/etcd-data
      - --advertise-client-urls=http://0.0.0.0:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --initial-advertise-peer-urls=http://0.0.0.0:2380
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-cluster=etcd=http://0.0.0.0:2380
      - --initial-cluster-state=new
    ports:
      - "2379:2379"
    networks:
      - hyperfaas-network
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    environment:
      ETCDCTL_ENDPOINTS: http://127.0.0.1:2379

  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        COMPONENT: worker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - function-logs:/root/functions/logs
      - ./log/:/root/log/
    ports:
      - "50001:50001"
    #network_mode: host
    networks:
      - hyperfaas-network
    command: [
      "./app",
      "-address=0.0.0.0:50001",
      "-runtime=${RUNTIME_TYPE}",
      "-log-level=${LOG_LEVEL}",
      "-log-format=text",
      "-log-file=/root/log/worker.log",
      "--auto-remove=true",
      "-containerized=true",
      "-update-buffer-size=100000",
      "-etcd-endpoint=etcd:2379"
    ]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50001"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      etcd:
        condition: service_healthy
  leaf:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        COMPONENT: leaf
    volumes:
      - ./logs:/app/logs
    ports:
      - "50050:50050"
    #network_mode: host
    networks:
      - hyperfaas-network
    command: [
      "./app",
      "-address=0.0.0.0:50050",
      "-log-level=${LOG_LEVEL}",
      "-log-format=text",
      "-log-file=/app/logs/leaf.log",
      "-worker-addr=worker:50001",
      "-scale-to-zero-after=10s",
      "-max-instances-per-worker=4",
      "-etcd-endpoint=etcd:2379"
    ]
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50050"]
      interval: 3s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      worker:
        condition: service_healthy
      etcd:
        condition: service_healthy
  haproxy:
    image: haproxy:3.0
    environment:
      HAPROXY_PORT: 9999
      CHILD_1: leaf:50050
    depends_on:
      routingcontroller:
        condition: service_started
      leaf:
        condition: service_healthy
    volumes:
      - ./config/hyperfaas-haproxy-grpc-compose-1-child.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./config/hyperfaas-spoe-grpc.cfg:/usr/local/etc/haproxy/hyperfaas-spoe-grpc.cfg:ro
      - routingcontroller-sock:/var/run/hyperfaas
    ports:
      - "9999:9999"
      - "8404:8404"
    networks:
      - hyperfaas-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9999"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  routingcontroller:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        COMPONENT: routingcontroller
    command:
      [
        "./app",
        "-log-level=${LOG_LEVEL}",
        "-log-format=text",
        "-log-file=/app/logs/routingcontroller.log",
        "-socket-path=/var/run/hyperfaas/spoe.sock",
        "-child-addr=leaf:50050",
        "-child-types=leaf"
      ]
    volumes:
      - routingcontroller-sock:/var/run/hyperfaas
      - ./logs:/app/logs
    networks:
      - hyperfaas-network
    depends_on:
      leaf:
        condition: service_healthy
networks:
  hyperfaas-network:
    name: hyperfaas-network
    driver: bridge

volumes:
  function-logs:
    name: function-logs
  routingcontroller-sock:

# Tmux configuration for HyperFaaS log monitoring
# Usage: run via test/scripts/monitor-logs.sh

# Set default terminal
set-option -g default-terminal "screen-256color"

# Enable mouse support
set -g mouse on

# Set window title
set -g set-titles on
set -g set-titles-string "#T - #W"

# Create a new session and window
new-session -d -s hyperfaas-logs -n "HyperFaaS Logs"

# Layout: 3 panes on top (lb, leaf-A, leaf-B) and 4 panes on bottom (workers)
# 1) Split the initial pane into top and bottom rows spanning full width
split-window -v -p 50 -t hyperfaas-logs:0

# 2) Top row -> 3 equal columns (lb, leaf-A, leaf-B)
# Left: Load Balancer in existing top pane
select-pane -t hyperfaas-logs:0.0
send-keys -t hyperfaas-logs:0.0 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Load Balancer Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f lb 2>/dev/null'" Enter
# Split top row into 3 equal columns
split-window -h -p 50 -t hyperfaas-logs:0.0 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Leaf-A Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f leaf-A 2>/dev/null'"
split-window -h -p 50 -t hyperfaas-logs:0.2 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Leaf-B Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f leaf-B 2>/dev/null'"

# 3) Bottom row -> 4 equal columns (worker-A-1, worker-A-2, worker-B-1, worker-B-2)
select-pane -t hyperfaas-logs:0.1
# Start with worker-A-1 in the bottom-left pane
send-keys -t hyperfaas-logs:0.1 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-A-1 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-A-1 2>/dev/null'" Enter
# Split bottom row into 4 equal columns
split-window -h -p 33 -t hyperfaas-logs:0.1 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-A-2 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-A-2 2>/dev/null'"
split-window -h -p 50 -t hyperfaas-logs:0.4 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-B-1 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-B-1 2>/dev/null'"
split-window -h -p 50 -t hyperfaas-logs:0.5 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-B-2 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-B-2 2>/dev/null'"

# Set pane borders to show which service is which
set -g pane-border-format "#{pane_index} #{pane_title}"
set -g pane-border-status top

# Start log monitoring in each pane (use env vars set by the script)
# Suppress docker compose warnings by redirecting stderr to /dev/null

# Top row (3 panes: lb, leaf-A, leaf-B)
# Pane 0: Load Balancer
respawn-pane -k -t hyperfaas-logs:0.0 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Load Balancer Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f lb 2>/dev/null'"

# Pane 1: Leaf-A
respawn-pane -k -t hyperfaas-logs:0.1 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Leaf-A Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f leaf-A 2>/dev/null'"

# Pane 2: Leaf-B
respawn-pane -k -t hyperfaas-logs:0.2 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Leaf-B Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f leaf-B 2>/dev/null'"

# Bottom row (4 panes: worker-A-1, worker-A-2, worker-B-1, worker-B-2)
# Pane 3: Worker-A-1
respawn-pane -k -t hyperfaas-logs:0.3 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-A-1 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-A-1 2>/dev/null'"

# Pane 4: Worker-A-2
respawn-pane -k -t hyperfaas-logs:0.4 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-A-2 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-A-2 2>/dev/null'"

# Pane 5: Worker-B-1
respawn-pane -k -t hyperfaas-logs:0.5 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-B-1 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-B-1 2>/dev/null'"

# Pane 6: Worker-B-2
respawn-pane -k -t hyperfaas-logs:0.6 "bash -lc 'cd \"$HYPERFAAS_REPO_ROOT\"; echo \"=== Worker-B-2 Logs ===\"; docker compose -f \"$HYPERFAAS_COMPOSE_FILE\" logs -f worker-B-2 2>/dev/null'"

